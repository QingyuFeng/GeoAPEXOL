// Add vector layer drawing capability
var source = new ol.source.Vector();
var vector = new ol.layer.Vector({
	source: source
});

var draw; // global so we can remove it later


function enableDrawing(){
    map.addLayer(vector);

    addInteraction();
    
    
    
}

function addInteraction() {
	var value = "Ty";
	if (value !== 'None') {
        draw = new ol.interaction.Draw({
			source: source,
			type: "Polygon"
		});
		
	draw.on('drawend', function(evt){
			source.clear();
		}, 
	   this); 
          
	
	map.addInteraction(draw);
	}
        
        
}
//addInteraction();


function clearPolygon(){
    
    source.clear();
}


function downloadPolygon()
{

alert('testing');
    const format = new ol.format.GeoJSON()
    const features = source.getFeatures();
    
	alert('testing');
	
    const json1 = format.writeFeatures(features);
    var fileNameToSaveAs = "fieldpolygon.json";
    //var json = JSON.stringify(json1);

    var textFileAsBlob = new Blob([json1], {type: "application/json"});
    var url  = URL.createObjectURL(textFileAsBlob);
    var  downloadLink = document.createElement('a');
    downloadLink.download = fileNameToSaveAs;
    downloadLink.innerHTML = "Download File";
    //alert("json");
    if (window.webkitURL != null)
    {
        // Chrome allows the link to be clicked
        // without actually adding it to the DOM.
        downloadLink.href = window.webkitURL.createObjectURL(textFileAsBlob);
    }
    else
    {
        // Firefox requires the link to be added to the DOM
        // before it can be clicked.
        downloadLink.href = window.URL.createObjectURL(textFileAsBlob);
        downloadLink.onclick = destroyClickedElement;
        downloadLink.style.display = "none";
        document.body.appendChild(downloadLink);
    }

    downloadLink.click(); 


}





// Commented by Qingyu Feng, June 26, 2018
// This block of code was added to enable drawing polygon,
// clear and downloading.
// Add vector layer drawing capability
var source = new ol.source.Vector();
var vector = new ol.layer.Vector({
	source: source
});

var draw; // global so we can remove it later


function enableDrawing(){
    map.addLayer(vector);

    addInteraction();
    
    
    
}

function addInteraction() {
	var value = "Ty";
	if (value !== 'None') {
        draw = new ol.interaction.Draw({
			source: source,
			type: "Polygon"
		});
		
	draw.on('drawend', function(evt){
			source.clear();
		}, 
	   this); 
          
	
	map.addInteraction(draw);
	}
        
        
}
//addInteraction();


function clearPolygon(){
    
    source.clear();
}


function downloadPolygon()
{
    const format = new ol.format.GeoJSON()
    const features = source.getFeatures();
    const json1 = format.writeFeatures(features);
    var fileNameToSaveAs = "fieldpolygon.json";
    //var json = JSON.stringify(json1);

    var textFileAsBlob = new Blob([json1], {type: "application/json"});
    var url  = URL.createObjectURL(textFileAsBlob);
    var  downloadLink = document.createElement('a');
    downloadLink.download = fileNameToSaveAs;
    downloadLink.innerHTML = "Download File";
    //alert("json");
    if (window.webkitURL != null)
    {
        // Chrome allows the link to be clicked
        // without actually adding it to the DOM.
        downloadLink.href = window.webkitURL.createObjectURL(textFileAsBlob);
    }
    else
    {
        // Firefox requires the link to be added to the DOM
        // before it can be clicked.
        downloadLink.href = window.URL.createObjectURL(textFileAsBlob);
        downloadLink.onclick = destroyClickedElement;
        downloadLink.style.display = "none";
        document.body.appendChild(downloadLink);
    }

    downloadLink.click(); 


}











// Commented by Qingyu Feng, June 25, 2018
//
// doClipMaptoFieldPolygon()
// 
// This gets called when the 'getfldmap' button is clicked to:
// 1. save the geojson for the user drawn field polygon to the server
// 2. clip the soil erosion raster with gdal.
// 3. modify the topaz.map to add the layer 
// 4. Display the layer back to the wepp1.php.
//
function doClipMaptoFieldPolygon(pass) {
			  
	// map was generated by initol: map = new ol.Map(mapOptions); 
	// map.getview()
	// Get the view associated with this map. 
	// A view manages properties such as center and resolution.
	// Returns:
	// The view that controls this map. 
	
	var t = map.getView().calculateExtent(); 
	var minchn = document.mapserv.MINCHN.value;
	var crit = document.mapserv.CRIT.value;
	alert("channel del extent: " + t);

	if (pass > 6) {
		if (confirm("Delete current field map and create a new one?"));
		else
			return;
	}
		
	//var proj = new ol.proj.Projection("EPSG:4326");
	//t.transform(map.getProjectionObject(),proj);
	// getCode(){string}
	// src/ol/proj/projection.js, line 144
	// Get the code for this projection, e.g. 'EPSG:4326'.

	// Returns:
	// Code. 
	
	
	var src  = map.getView().getProjection().getCode();
	alert(src);
	
	// t: extent
	// src: code of project
	// ol.proj.transformExtent:
	// Transforms an extent from source projection to destination projection.
	// This returns a new extent (and does not modify the original).
	var nt = ol.proj.transformExtent(t,src,"EPSG:4326");


	// nt means new extent for EPSG 4326
	var wid = ol.extent.getWidth(nt);
	var hgt = ol.extent.getHeight(nt);
	var bx = nt;
	var zoom = map.getView().getZoom();

	
	// Commented by Qingyu Feng June 25, 2018
	// saveLayers()
	// Saves the current set of visible layers so they can be restored later.
	saveLayers();
	
	// Commented by Qingyu Feng June 25, 2018
	// mapserv: this is not the mapserver, this is the form
	// of the wepp1.php. Here, the function setup the values
	// of some php values.
	document.mapserv.EXTENT.value = bx;
	document.mapserv.ZOOMOPEN.value = zoom;
	document.mapserv.WIDTH.value = wid;
	document.mapserv.HEIGHT.value = hgt;
	
	// Submitted the mapser form by calling the php
	document.mapserv.action = "<?=$globwebphp?>extract_field_erosion.php";
	document.mapserv.method = "POST";
	if (activeLayers != null)
		document.mapserv.AL.value = activeLayers;
		document.mapserv.submit();
	
	}











